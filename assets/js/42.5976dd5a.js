(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{364:function(a,t,s){"use strict";s.r(t);var r=s(3),e=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("blockquote",[t("p",[a._v("原文详见"),t("a",{attrs:{href:"https://ricstudio.top/archives/java-online-question-probe",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://ricstudio.top/archives/java-online-question-probe"),t("OutboundLink")],1)])]),a._v(" "),t("p",[a._v("不管出现任何问题,优先级最高的永远是"),t("strong",[a._v("恢复服务")]),a._v(",保留下当时的异常信息（内存dump、线程dump、gc log等等，在紧急情况下甚至可以不用保留，等到事后去复现）,等服务正常,再去复盘问题 "),t("a",{attrs:{name:"spunT"}})]),a._v(" "),t("h2",{attrs:{id:"常见问题-cpu-利用率高-飙升"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题-cpu-利用率高-飙升"}},[a._v("#")]),a._v(" 常见问题: Cpu 利用率高\\飙升")]),a._v(" "),t("p",[a._v("常见原因:")]),a._v(" "),t("ul",[t("li",[a._v("频繁Gc")]),a._v(" "),t("li",[a._v("死循环,线程阻塞 ,io wait...etc")])]),a._v(" "),t("p",[t("a",{attrs:{name:"ogw8i"}})]),a._v(" "),t("h2",{attrs:{id:"定位问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定位问题"}},[a._v("#")]),a._v(" 定位问题")]),a._v(" "),t("p",[t("a",{attrs:{name:"ay75b"}})]),a._v(" "),t("h3",{attrs:{id:"传统方法top"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传统方法top"}},[a._v("#")]),a._v(" 传统方法top")]),a._v(" "),t("p",[a._v("针对的是Java进程启动开始到现在的cpu占比情况")]),a._v(" "),t("ol",[t("li",[a._v("top 命令查看系统进程监控,  hp按照线程排序  hm根据内存排序")]),a._v(" "),t("li",[a._v("top -Hp pid 定位Cpu最好的线程")])]),a._v(" "),t("p",[t("img",{attrs:{src:"1650776507098-1eb7df68-aa1d-4c1c-964b-fe2d4edc065d.png",alt:"image.png"}})]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("**printf '0x%x' tid **线程 id 转化 16 进制")]),a._v(" "),t("li",[a._v("jstack pid | grep tid 找到线程堆栈")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("jstack "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12816")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" grep "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x3211")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("A")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("30")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"1650776576838-ccf58444-c2b1-4d4c-85e8-b19ea472771b.png",alt:"image.png"}}),a._v(" "),t("a",{attrs:{name:"QDaNi"}})]),a._v(" "),t("h3",{attrs:{id:"top-命令显示的指示符的含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#top-命令显示的指示符的含义"}},[a._v("#")]),a._v(" top 命令显示的指示符的含义")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("指示符")]),a._v(" "),t("th",[a._v("含义")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("PID")]),a._v(" "),t("td",[a._v("进程id")])]),a._v(" "),t("tr",[t("td",[a._v("USER")]),a._v(" "),t("td",[a._v("进程所有者")])]),a._v(" "),t("tr",[t("td",[a._v("PR")]),a._v(" "),t("td",[a._v("进程优先级")])]),a._v(" "),t("tr",[t("td",[a._v("NI")]),a._v(" "),t("td",[a._v("nice值。负值表示高优先级，正值表示低优先级")])]),a._v(" "),t("tr",[t("td",[a._v("VIRT")]),a._v(" "),t("td",[a._v("进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES")])]),a._v(" "),t("tr",[t("td",[a._v("RES")]),a._v(" "),t("td",[a._v("进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA")])]),a._v(" "),t("tr",[t("td",[a._v("SHR")]),a._v(" "),t("td",[a._v("共享内存大小，单位kb")])]),a._v(" "),t("tr",[t("td",[a._v("S")]),a._v(" "),t("td",[a._v("进程状态。D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程")])]),a._v(" "),t("tr",[t("td",[a._v("%CPU")]),a._v(" "),t("td",[a._v("上次更新到现在的CPU时间占用百分比")])]),a._v(" "),t("tr",[t("td",[a._v("%MEM")]),a._v(" "),t("td",[a._v("进程使用的物理内存百分比")])]),a._v(" "),t("tr",[t("td",[a._v("TIME+")]),a._v(" "),t("td",[a._v("进程使用的CPU时间总计，单位1/100秒")])]),a._v(" "),t("tr",[t("td",[a._v("COMMAND")]),a._v(" "),t("td",[a._v("进程名称（命令名/命令行）")])])])]),a._v(" "),t("p",[t("a",{attrs:{name:"aS1YG"}})]),a._v(" "),t("h3",{attrs:{id:"简化top的工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简化top的工具"}},[a._v("#")]),a._v(" 简化top的工具")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://raw.github.com/oldratlee/useful-scripts/release-2.x/bin/show-busy-java-threads",target:"_blank",rel:"noopener noreferrer"}},[a._v("show-busy-java-threads"),t("OutboundLink")],1),a._v(",但我没用过 "),t("a",{attrs:{name:"XLOEs"}})]),a._v(" "),t("h3",{attrs:{id:"阿里云的arthas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#阿里云的arthas"}},[a._v("#")]),a._v(" 阿里云的arthas")]),a._v(" "),t("p",[a._v("arthas这种是一段采样间隔内，当前JVM里各个线程所占用的cpu时间占总cpu时间的百分比。\n如果没有安装,可以线上安装.")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v("curl "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("O")]),a._v(" https"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("arthas"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("gitee"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("io"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("arthas"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("boot"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jar # 下载\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[t("img",{attrs:{src:"1650776704758-8b29d14f-5ab6-4e37-ab51-86d667b5b056.png",alt:"image.png"}})]),a._v(" "),t("ul",[t("li",[a._v("dashboard ：系统实时数据面板, 可查看线程，内存，gc 等信息")]),a._v(" "),t("li",[a._v("thread ：查看当前线程信息，查看线程的堆栈，如查看最繁忙的前 n 线程")]),a._v(" "),t("li",[a._v("getstatic：获取静态属性值，如 getstatic className attrName 可用于查看线上开关真实值")]),a._v(" "),t("li",[a._v("sc：查看 jvm 已加载类信息，可用于排查 jar 包冲突")]),a._v(" "),t("li",[a._v("sm：查看 jvm 已加载类的方法信息")]),a._v(" "),t("li",[a._v("jad：反编译 jvm 加载类信息,排查代码逻辑没执行原因")]),a._v(" "),t("li",[a._v("logger：查看logger信息，更新logger level")]),a._v(" "),t("li",[a._v("watch：观测方法执行数据，包含出参、入参、异常等")]),a._v(" "),t("li",[a._v("trace：方法内部调用时长，并输出每个节点的耗时，用于性能分析")]),a._v(" "),t("li",[a._v("tt：用于记录方法，并做回放 "),t("a",{attrs:{name:"ra4yh"}})])]),a._v(" "),t("h2",{attrs:{id:"常见现象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见现象"}},[a._v("#")]),a._v(" 常见现象")]),a._v(" "),t("p",[t("a",{attrs:{name:"VLbKn"}})]),a._v(" "),t("h3",{attrs:{id:"发现cpu最高-的是gc线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发现cpu最高-的是gc线程"}},[a._v("#")]),a._v(" 发现cpu最高 的是Gc线程")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GC")]),a._v(" task thread#"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParallelGC")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v('" os_prio'),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" tid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x00007fd99001f800")]),a._v(" nid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x779")]),a._v(" runnable\n"),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GC")]),a._v(" task thread#"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParallelGC")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v('" os_prio'),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" tid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x00007fd990021800")]),a._v(" nid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x77a")]),a._v(" runnable \n"),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GC")]),a._v(" task thread#"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParallelGC")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v('" os_prio'),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" tid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x00007fd990023000")]),a._v(" nid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x77b")]),a._v(" runnable \n"),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("GC")]),a._v(" task thread#"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ParallelGC")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v('" os_prio'),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),a._v(" tid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x00007fd990025000")]),a._v(" nid"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("0x77c")]),a._v(" runnab\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("排查方法:")]),a._v(" "),t("ul",[t("li",[a._v("方法a : 查看gc 日志 (需要记得开启)")]),a._v(" "),t("li",[a._v("方法b : jstat -gcutil 进程号 统计间隔毫秒 统计次数（缺省代表一致统计")]),a._v(" "),t("li",[a._v("方法c : 如果所在公司有对应用进行监控的组件当然更方便（比如Prometheus + Grafana）")])]),a._v(" "),t("p",[a._v("获取到gc日志之后，可以上传到"),t("a",{attrs:{href:"http://gceasy.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("GC easy"),t("OutboundLink")],1),a._v("帮助分析，得到可视化的图表分析结果。\n"),t("img",{attrs:{src:"1650777672225-0436fc34-4058-45c3-81a5-8163bfdc9c95.png",alt:"image.png"}}),a._v(" "),t("a",{attrs:{name:"Bdnq5"}})]),a._v(" "),t("h3",{attrs:{id:"发现cpu最高的是业务线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发现cpu最高的是业务线程"}},[a._v("#")]),a._v(" 发现cpu最高的是业务线程")]),a._v(" "),t("ul",[t("li",[a._v("等待内核态锁，如 synchronized\n"),t("ul",[t("li",[a._v("jstack -l pid | grep BLOCKED 查看阻塞态线程堆栈")]),a._v(" "),t("li",[a._v("dump 线程栈，分析线程持锁情况。")]),a._v(" "),t("li",[a._v("arthas提供了thread -b，可以找出当前阻塞其他线程的线程。针对 synchronized 情况")]),a._v(" "),t("li",[a._v("查询是否有代码死锁: jstack –l pid | grep -i –E 'BLOCKED | deadlock")])])])]),a._v(" "),t("p",[t("a",{attrs:{name:"M7t6r"}})]),a._v(" "),t("h2",{attrs:{id:"常见问题恢复"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题恢复"}},[a._v("#")]),a._v(" 常见问题恢复")]),a._v(" "),t("p",[t("img",{attrs:{src:"1650776843200-6f5f7cf6-1ce3-4e99-b6f6-1673e3635459.png",alt:"image.png"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);