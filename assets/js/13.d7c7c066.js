(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{336:function(v,t,_){"use strict";_.r(t);var a=_(3),s=Object(a.a)({},(function(){var v=this,t=v._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"协议基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协议基础"}},[v._v("#")]),v._v(" 协议基础")]),v._v(" "),t("h2",{attrs:{id:"网络传输的流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络传输的流程"}},[v._v("#")]),v._v(" 网络传输的流程")]),v._v(" "),t("p",[v._v("请求方 - > (中间件) cdn -> 服务端\ncdn 将请求分发给最近的服务器")]),v._v(" "),t("h2",{attrs:{id:"传输协议分层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传输协议分层"}},[v._v("#")]),v._v(" 传输协议分层")]),v._v(" "),t("p",[v._v("四层:\n链路层\n网络互联层 ip\n传输层 tcp\n应用层")]),v._v(" "),t("p",[v._v("七层:\n物理层，网络的物理形式，例如电缆、光纤、网卡、集线器等等；\n第二层：数据链路层，它基本相当于 TCP/IP 的链接层；\n第三层：网络层，相当于 TCP/IP 里的网际层；\n第四层：传输层，相当于 TCP/IP 里的传输层；\n第五层：会话层，维护网络中的连接状态，即保持会话和同步；\n第六层：表示层，把数据转换为合适、可理解的语法和语义；\n第七层：应用层，面向具体的应用传输数据。")]),v._v(" "),t("h2",{attrs:{id:"域名解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#域名解析"}},[v._v("#")]),v._v(" 域名解析")]),v._v(" "),t("p",[v._v("真实计算机使用的是mac地址，mac地址在局域网中映射为一个ip地址，但ip地址记忆困难。域名解析就是为了将域名分析转换为具体的ip地址")]),v._v(" "),t("h3",{attrs:{id:"域名分级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#域名分级"}},[v._v("#")]),v._v(" 域名分级")]),v._v(" "),t("p",[t("strong",[v._v("根域名服务器（Root DNS Server）：")]),v._v("\n管理顶级域名服务器，返回“com”“net”“cn”等顶级域名服务器的 IP 地址；\n"),t("strong",[v._v("顶级域名服务器（Top-level DNS Server）")]),v._v("：管理各自域名下的权威域名服务器，比如 com 顶级域名服务器可以返回 apple.com 域名服务器的 IP 地址；\n"),t("strong",[v._v("权威域名服务器（Authoritative DNS Server）")]),v._v("：管理自己域名下主机的 IP 地址，比如 apple.com 权威域名服务器可以返回 www.apple.com 的 IP 地址。")]),v._v(" "),t("h1",{attrs:{id:"基础篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础篇"}},[v._v("#")]),v._v(" 基础篇")]),v._v(" "),t("h2",{attrs:{id:"浏览器到服务器发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器到服务器发生了什么"}},[v._v("#")]),v._v(" 浏览器到服务器发生了什么")]),v._v(" "),t("p",[v._v("http协议是建立在Tcp/ip协议基础上,所以首先")]),v._v(" "),t("ol",[t("li",[v._v("使用三次握手,建立web服务器器的连接")]),v._v(" "),t("li",[v._v("通过 TCP 发送了一个“GET / HTTP/1.1”请求报文")]),v._v(" "),t("li",[v._v("web服务器回复响应,已经接收到请求")]),v._v(" "),t("li",[v._v("web服务器根据请求,返回具体内容")]),v._v(" "),t("li",[v._v("浏览器收到内容后,返回一个ack确认")]),v._v(" "),t("li",[v._v("浏览器解析接收到的内容再次循环执行")]),v._v(" "),t("li",[v._v("最后tcp四次挥手关闭连接")])]),v._v(" "),t("h2",{attrs:{id:"http-报文内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-报文内容"}},[v._v("#")]),v._v(" Http 报文内容")]),v._v(" "),t("p",[v._v("http的请求与响应报文基本一致:分为三大部分")]),v._v(" "),t("ol",[t("li",[v._v("起始行（start line）：描述请求或响应的基本信息；")]),v._v(" "),t("li",[v._v("头部字段集合（header）：使用 key-value 形式更详细地说明报文；")]),v._v(" "),t("li",[v._v("消息正文（entity）：实际传输的数据，它不一定是纯文本，可以是图片、视频等二进制数据。")])]),v._v(" "),t("h3",{attrs:{id:"起始行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#起始行"}},[v._v("#")]),v._v(" 起始行:")]),v._v(" "),t("p",[v._v("请求行构成: GET / HTTP/1.1\n请求方法 , 请求目标, 版本号\n状态行构成:HTTP/1.1 200 OK\n版本号 状态码 原因")]),v._v(" "),t("h3",{attrs:{id:"头部字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#头部字段"}},[v._v("#")]),v._v(" 头部字段:")]),v._v(" "),t("p",[v._v("头部字段可以分为:")]),v._v(" "),t("ol",[t("li",[v._v("通用字段:在请求头和响应头里都可以出现；")]),v._v(" "),t("li",[v._v("请求字段: 在请求头和响应头里都可以出现；")]),v._v(" "),t("li",[v._v("响应字段: 仅能出现在响应头里，补充说明响应报文的信息；")]),v._v(" "),t("li",[v._v("实体字段: 它实际上属于通用字段，但专门描述 body 的额外信息。\n"),t("strong",[v._v("举例")]),v._v("\nHost 字段告诉服务器这个请求应该由哪个主机来处理(必须有)\n"),t("strong",[v._v("User-Agent")]),v._v("是请求字段，只出现在请求头里。它使用一个字符串来描述发起 HTTP 请求的客户端，\n"),t("strong",[v._v("Date")]),v._v("字段是一个通用字段，但通常出现在响应头里，表示 HTTP 报文创建的时间\n"),t("strong",[v._v("Server")]),v._v("字段是响应字段，只能出现在响应头里。它告诉客户端当前正在提供 Web 服务的软件名称和版本号，\n"),t("strong",[v._v("Content-Length")]),v._v("，它表示报文里 body 的长度，也就是请求头或响应头空行后面数据的长度。")])]),v._v(" "),t("h2",{attrs:{id:"请求方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求方法"}},[v._v("#")]),v._v(" 请求方法")]),v._v(" "),t("p",[v._v("目前 HTTP/1.1 规定了八种方法，单词"),t("strong",[v._v("都必须是大写的形式")])]),v._v(" "),t("ol",[t("li",[v._v("GET：获取资源，可以理解为读取或者下载数据；")]),v._v(" "),t("li",[v._v("HEAD：获取资源的元信息；就是只返回响应头")]),v._v(" "),t("li",[v._v("POST：向资源提交数据，相当于写入或上传数据；")]),v._v(" "),t("li",[v._v("PUT：类似 POST；")]),v._v(" "),t("li",[v._v("DELETE：删除资源；")]),v._v(" "),t("li",[v._v("CONNECT：建立特殊的连接隧道；")]),v._v(" "),t("li",[v._v("OPTIONS：列出可对资源实行的方法；")]),v._v(" "),t("li",[v._v("TRACE：追踪请求 - 响应的传输路径。\n注意包含4以后的方法都为扩展方法,有些服务器不支持此种请求方法")])]),v._v(" "),t("h2",{attrs:{id:"请求地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#请求地址"}},[v._v("#")]),v._v(" 请求地址")]),v._v(" "),t("p",[v._v("浏览器中的网络地址是URI\nURI由两部分组成:URL("),t("strong",[v._v("统一资源定位符")]),v._v(")与 URN("),t("strong",[v._v("统一资源名")]),v._v(")\n现在因为URL太普及了,经常把"),t("strong",[v._v("URL")]),v._v(" 等同于"),t("strong",[v._v("URI")])]),v._v(" "),t("h3",{attrs:{id:"uri格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uri格式"}},[v._v("#")]),v._v(" URI格式")]),v._v(" "),t("p",[v._v("URI 本质上是一个字符串，这个字符串的作用是"),t("strong",[v._v("唯一地标记资源的位置或者名字")]),v._v("。")]),v._v(" "),t("ol",[t("li",[v._v("scheme: 方案名\\协议名")]),v._v(" "),t("li",[v._v("😕/ 分隔符")]),v._v(" "),t("li",[v._v("host:port:   主机名加端口号")]),v._v(" "),t("li",[v._v("path: 标记资源所在位置")]),v._v(" "),t("li",[v._v("query: 表示对资源附加的额外要求；")])]),v._v(" "),t("h3",{attrs:{id:"uri-编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uri-编码"}},[v._v("#")]),v._v(" URI 编码")]),v._v(" "),t("p",[v._v("URI 引入了编码机制，对于 ASCII 码以外的字符集和特殊字符做一个特殊的操作，把它们转换成与 URI 语义不冲突的形式\n非 ASCII 码或特殊字符转换成十六进制字节值，然后前面再加上一个“%”")]),v._v(" "),t("h2",{attrs:{id:"响应报文-响应头"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#响应报文-响应头"}},[v._v("#")]),v._v(" 响应报文 - 响应头")]),v._v(" "),t("p",[v._v("服务器收到请求后,必定返回响应报文\n响应报文由响应体和响应头\n响应头由状态行和头字段构成")]),v._v(" "),t("h4",{attrs:{id:"状态行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#状态行"}},[v._v("#")]),v._v(" 状态行")]),v._v(" "),t("p",[v._v("由 "),t("code",[v._v("协议版本号")]),v._v(" \\ "),t("code",[v._v("状态码")]),v._v(" \\ "),t("code",[v._v("结果")]),v._v(" 组成,其中对我们最有用的就是状态码\nRFC 标准把状态码分成了五类，用数字的第一位表示分类，而 0~99 不用，这样状态码的实际可用范围就大大缩小了，由 000~999 变成了 100~599。")]),v._v(" "),t("ul",[t("li",[v._v("1××：提示信息，表示目前是协议处理的中间状态，还需要后续的操作；")]),v._v(" "),t("li",[v._v("2××：成功，报文已经收到并被正确处理；")]),v._v(" "),t("li",[v._v("3××：重定向，资源位置发生变动，需要客户端重新发送请求；")]),v._v(" "),t("li",[v._v("4××：客户端错误，请求报文有误，服务器无法处理；")]),v._v(" "),t("li",[v._v("5××：服务器错误，服务器在处理请求时内部发生了错误。")])]),v._v(" "),t("h5",{attrs:{id:"_1xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1xx"}},[v._v("#")]),v._v(" 1xx")]),v._v(" "),t("p",[v._v("这种状态码很少见,有可能见到的是,“"),t("strong",[v._v("101 Switching Protocols")]),v._v("”。它的意思是客户端使用 Upgrade 头字段，要求在 HTTP 协议的基础上改成其他的协议继续通信，比如 WebSocket。而如果服务器也同意变更协议，就会发送状态码 101，但这之后的数据传输就不会再使用 HTTP 了。")]),v._v(" "),t("h5",{attrs:{id:"_2xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2xx"}},[v._v("#")]),v._v(" 2xx")]),v._v(" "),t("p",[v._v("“"),t("strong",[v._v("200 OK")]),v._v("”是最常见的成功状态码，\n“"),t("strong",[v._v("204 No Content")]),v._v("”是另一个很常见的成功状态码，它的含义与“200 OK”基本相同，但响应头后没有 body 数据。\n“"),t("strong",[v._v("206 Partial Content")]),v._v("”是 HTTP 分块下载或断点续传的基础，在客户端发送“范围请求”、要求获取资源的部分数据时出现，“"),t("strong",[v._v("206 Partial Content")]),v._v("”是 HTTP 分块下载或断点续传的基础，在客户端发送“范围请求”、要求获取资源的部分数据时出现，")]),v._v(" "),t("h5",{attrs:{id:"_3xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3xx"}},[v._v("#")]),v._v(" 3xx")]),v._v(" "),t("p",[v._v("“"),t("strong",[v._v("301 Moved Permanently")]),v._v("”俗称“永久重定向”，含义是此次请求的资源已经不存在了，需要改用改用新的 URI 再次访问。\n"),t("strong",[v._v("302 Found")]),v._v("”，曾经的描述短语是“"),t("strong",[v._v("Moved Temporarily")]),v._v("”，俗称“临时重定向”，意思是请求的资源还在，但需要暂时用另一个 URI 来访问。\n“"),t("strong",[v._v("304 Not Modified")]),v._v("” 是一个比较有意思的状态码，它用于 If-Modified-Since 等条件请求，表示资源未修改，用于缓存控制。它不具有通常的跳转含义，但可以理解成“重定向已到缓存的文件”（即“缓存重定向”）")]),v._v(" "),t("h5",{attrs:{id:"_4xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4xx"}},[v._v("#")]),v._v(" 4xx")]),v._v(" "),t("p",[v._v("“"),t("strong",[v._v("400 Bad Request")]),v._v("”是一个通用的错误码，表示请求报文有错误\n“"),t("strong",[v._v("403 Forbidden")]),v._v("”实际上不是客户端的请求出错，而是表示服务器禁止访问资源。\n“"),t("strong",[v._v("404 Not Found")]),v._v("” ,资源不存在,但现在已经被滥用\n"),t("strong",[v._v("存在明确说明的错误码")])]),v._v(" "),t("ul",[t("li",[v._v("405 Method Not Allowed：不允许使用某些方法操作资源，例如不允许 POST 只能 GET；")]),v._v(" "),t("li",[v._v("406 Not Acceptable：资源无法满足客户端请求的条件，例如请求中文但只有英文；")]),v._v(" "),t("li",[v._v("408 Request Timeout：请求超时，服务器等待了过长的时间；")]),v._v(" "),t("li",[v._v("409 Conflict：多个请求发生了冲突，可以理解为多线程并发时的竞态；")]),v._v(" "),t("li",[v._v("413 Request Entity Too Large：请求报文里的 body 太大；")]),v._v(" "),t("li",[v._v("414 Request-URI Too Long：请求行里的 URI 太大；")]),v._v(" "),t("li",[v._v("429 Too Many Requests：客户端发送了太多的请求，通常是由于服务器的限连策略；")]),v._v(" "),t("li",[v._v("431 Request Header Fields Too Large：请求头某个字段或总体太大；")]),v._v(" "),t("li")]),v._v(" "),t("h5",{attrs:{id:"_5xx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5xx"}},[v._v("#")]),v._v(" 5xx")]),v._v(" "),t("p",[v._v("5××类状态码表示客户端请求报文正确，但服务器在处理时内部发生了错误，无法返回应有的响应数据，是服务器端的“错误码”。\n“"),t("strong",[v._v("500 Internal Server Error")]),v._v("”与 400 类似，也是一个通用的错误码，\n“"),t("strong",[v._v("501 Not Implemented")]),v._v("”表示客户端请求的功能还不支持\n“"),t("strong",[v._v("502 Bad Gateway")]),v._v("”通常是服务器作为网关或者代理时返回的错误码，\n“"),t("strong",[v._v("503 Service Unavailable")]),v._v("”表示服务器当前很忙，暂时无法响应服务，503 响应报文里通常还会有一个“"),t("strong",[v._v("Retry-After")]),v._v("”字段，指示客户端可以在多久以后再次尝试发送请求")]),v._v(" "),t("h2",{attrs:{id:"http中实体数据-body"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http中实体数据-body"}},[v._v("#")]),v._v(" Http中实体数据 Body")]),v._v(" "),t("p",[v._v("Http协议需要收发双方确认传输的数据格式是什么\n使用MIME type 来表示数据的格式")]),v._v(" "),t("ol",[t("li",[v._v("请求头是Accept字段")]),v._v(" "),t("li",[v._v("响应头是Content-Type字段\n为了增强数据传输效率,传输还有可能使用压缩(Encoding type)对数据进行处理")]),v._v(" "),t("li",[v._v("请求头中是Accept-Encoding")]),v._v(" "),t("li",[v._v("响应头中是Content-Encoding\n常用压缩有以下三种格式:")]),v._v(" "),t("li",[v._v("gzip：GNU zip 压缩格式，也是互联网上最流行的压缩格式；")]),v._v(" "),t("li",[v._v("deflate：zlib（deflate）压缩格式，流行程度仅次于 gzip；")]),v._v(" "),t("li",[v._v("br：一种专门为 HTTP 优化的新压缩算法（Brotli）。")])]),v._v(" "),t("p",[v._v("语言类型表示实体数据的自然语言，相关的头字段是 Accept-Language 和 Content-Language；")]),v._v(" "),t("p",[v._v("字符集表示实体数据的编码方式，相关的头字段是 Accept-Charset 和 Content-Type；")]),v._v(" "),t("p",[v._v("客户端需要在请求头里使用 Accept 等头字段与服务器进行“内容协商”，要求服务器返回最合适的数据；")]),v._v(" "),t("p",[v._v("Accept 等头字段可以用“,”顺序列出多个可能的选项，还可以用“;q=”参数来精确指定权重。")]),v._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[v._v("Accept: text/html,application/xml;q=0.9,*/*;q=0.8\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[t("strong",[v._v("内容协商的结果")]),v._v("\n内容协商的过程是不透明的，每个 Web 服务器使用的算法都不一样。但有的时候，服务器会在响应头里多加一个"),t("strong",[v._v("Vary")]),v._v("字段，记录服务器在内容协商时参考的请求头字段，给出一点信息，例如：")]),v._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[v._v("Vary: Accept-Encoding,User-Agent,Accept\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("p",[v._v("表示服务器依据了 Accept-Encoding、User-Agent 和 Accept 这三个头字段，然后决定了发回的响应报文。\nVary 字段可以认为是响应报文的一个特殊的“版本标记”。每当 Accept 等请求头变化时，Vary 也会随着响应报文一起变化。也就是说，同一个 URI 可能会有多个不同的“版本”，主要用在传输链路中间的代理服务器实现缓存服务，")]),v._v(" "),t("h1",{attrs:{id:"进阶篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进阶篇"}},[v._v("#")]),v._v(" 进阶篇")]),v._v(" "),t("h2",{attrs:{id:"传输大文件数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#传输大文件数据"}},[v._v("#")]),v._v(" 传输大文件数据")]),v._v(" "),t("ol",[t("li",[v._v("压缩 HTML 等文本文件是传输大文件最基本的方法；")]),v._v(" "),t("li",[v._v("分块传输可以流式收发数据，节约内存和带宽，使用响应头字段“Transfer-Encoding: chunked”来表示，分块的格式是 16 进制长度头 + 数据块；")]),v._v(" "),t("li",[v._v("范围请求可以只获取部分数据，即“分块请求”，实现视频拖拽或者断点续传，使用请求头字段“Range”和响应头字段“Content-Range”，响应状态码必须是 206；")]),v._v(" "),t("li",[v._v("也可以一次请求多个范围，这时候响应报文的数据类型是“multipart/byteranges”，body 里的多个部分会用 boundary 字符串分隔。")])]),v._v(" "),t("h2",{attrs:{id:"http的连接管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http的连接管理"}},[v._v("#")]),v._v(" Http的连接管理")]),v._v(" "),t("p",[v._v("Http分为长连接与短连接,两种连接区分在于请求后通道是否关闭.http0.9旧版本默认是短连接的,每一个请求都需要三次握手和关闭通道,1.0之后版本默认使用长连接.")]),v._v(" "),t("h3",{attrs:{id:"长连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#长连接"}},[v._v("#")]),v._v(" 长连接")]),v._v(" "),t("p",[v._v("我们可以手动标明要求使用长连接\n请求头中使用"),t("strong",[v._v("Connection")]),v._v("，值是“"),t("strong",[v._v("keep-alive")]),v._v("”来申请\n如果服务器支持就会在响应报文中增加"),t("strong",[v._v("Connection: keep-alive")]),v._v(" 字段")]),v._v(" "),t("p",[t("strong",[v._v("长连接得不到关闭会非常耗费性能")]),v._v("\n为了解决这个问题:可以从客户端与服务端两方面解决\n客户端:")]),v._v(" "),t("ol",[t("li",[v._v("在请求头里加上“"),t("strong",[v._v("Connection: close")]),v._v("”字段，告诉服务器：“这次通信后就关闭连接”。")]),v._v(" "),t("li",[v._v("在报文里附加通用头字段“Keep-Alive: timeout=value”，限定长连接的超时时间。")])]),v._v(" "),t("p",[v._v("服务端:\n增加使用策略例如nginx:")]),v._v(" "),t("ol",[t("li",[v._v("在报文里附加通用头字段“Keep-Alive: timeout=value”，限定长连接的超时时间。")]),v._v(" "),t("li",[v._v("使用“keepalive_requests”指令")])]),v._v(" "),t("h3",{attrs:{id:"头部阻塞"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#头部阻塞"}},[v._v("#")]),v._v(" 头部阻塞")]),v._v(" "),t("p",[v._v("“队头阻塞”与短连接和长连接无关，而是由 HTTP 基本的“请求 - 应答”模型所导致的。\n解决措施:")]),v._v(" "),t("ol",[t("li",[v._v("客户端: 增加并发请求,但存在占用性能问题,可能会被服务端认为恶意请求拒绝")]),v._v(" "),t("li",[v._v("服务端: 域名分片,增加多个域名指向执行服务器,实际增加可容纳并发数量")])]),v._v(" "),t("h2",{attrs:{id:"重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重定向"}},[v._v("#")]),v._v(" 重定向")]),v._v(" "),t("p",[v._v("浏览器无法控制的,为重定向.当返回状态行为3xx,响应报文中存在"),t("code",[v._v("Location:")]),v._v(" 字段触发,Location字段执行的地址可以为绝对地址,也可以为相对地址(去除域名\\端口号后的地址)")]),v._v(" "),t("p",[t("strong",[v._v("重定向的相关问题")])]),v._v(" "),t("ol",[t("li",[v._v("性能损耗,所有的请求都会走两次")]),v._v(" "),t("li",[v._v("循环跳转: 如果重定向链路设计有问题时会触发:"),t("code",[v._v("A->B->c->A")])])]),v._v(" "),t("h2",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[v._v("#")]),v._v(" Cookie")]),v._v(" "),t("p",[v._v("弥补Http协议无状态的纸条小字段")]),v._v(" "),t("h3",{attrs:{id:"cookie属性的设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie属性的设置"}},[v._v("#")]),v._v(" Cookie属性的设置")]),v._v(" "),t("p",[t("strong",[v._v("有效期")]),v._v("\nCookie 的有效期可以使用 Expires 和 Max-Age 两个属性来设置。\n"),t("strong",[v._v("Expires")]),v._v("”俗称“过期时间”，用的是绝对时间点，可以理解为“截止日期”（deadline）。\n“"),t("strong",[v._v("Max-Age")]),v._v("”用的是相对时间，单位是秒.\n浏览器会优先采用 Max-Age 计算失效期")]),v._v(" "),t("p",[t("strong",[v._v("作用域")]),v._v(" "),t("strong",[v._v("Domain")]),v._v("”和“"),t("strong",[v._v("Path")]),v._v("”指定了 Cookie 所属的域名和路径，浏览器在发送 Cookie 前会从 URI 中提取出 host 和 path 部分，对比 Cookie 的属性。如果不满足条件，就不会在请求头里发送 Cookie。")]),v._v(" "),t("p",[t("strong",[v._v("安全性")]),v._v(" "),t("strong",[v._v("HttpOnly")]),v._v("”会告诉浏览器，此 Cookie 只能通过浏览器 HTTP 协议传输，禁止其他方式访问，")]),v._v(" "),t("p",[t("strong",[v._v("SameSite")]),v._v("”可以防范“跨站请求伪造”（XSRF）攻击，设置成“SameSite=Strict”可以严格限定 Cookie 不能随着跳转链接跨站发送，而“SameSite=Lax”则略宽松一点，允许 GET/HEAD 等安全方法，但禁止 POST 跨站发送。")]),v._v(" "),t("p",[t("strong",[v._v("Secure")]),v._v("”，表示这个 Cookie 仅能用 HTTPS 协议加密传输，明文的 HTTP 协议会禁止发送。")]),v._v(" "),t("h2",{attrs:{id:"浏览器缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[v._v("#")]),v._v(" 浏览器缓存")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("缓存是优化系统性能的重要手段，HTTP 传输的每一个环节中都可以有缓存；")])]),v._v(" "),t("li",[t("p",[v._v("服务器使用“Cache-Control”设置缓存策略，常用的是“max-age”，表示资源的有效期；")]),v._v(" "),t("ol",[t("li",[t("ul",[t("li",[v._v("no_store："),t("strong",[v._v("不允许缓存")]),v._v("，用于某些变化非常频繁的数据，例如秒杀页面；")])])]),v._v(" "),t("li",[v._v("no_cache： 可以缓存,但使用之前需要去服务器验证")]),v._v(" "),t("li",[v._v("must-revalidate：缓存没过期就使用,过期了去服务器验证")])])]),v._v(" "),t("li",[t("p",[v._v("验证资源是否失效需要使用“条件请求”，常用的是“if-Modified-Since”和“If-None-Match”，收到 304 就可以复用缓存里的资源；")])]),v._v(" "),t("li",[t("p",[v._v("验证资源是否被修改的条件有两个：“Last-modified”和“ETag”，需要服务器预先在响应报文里设置，搭配条件请求使用；")])]),v._v(" "),t("li",[t("p",[v._v("浏览器也可以发送“Cache-Control”字段，使用“max-age=0”或“no_cache”刷新数据。")])])]),v._v(" "),t("h2",{attrs:{id:"代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[v._v("#")]),v._v(" 代理")]),v._v(" "),t("p",[v._v("HTTP 代理就是客户端和服务器通信链路中的一个中间环节，为两端提供“代理服务”,代理处于中间层，为 HTTP 处理增加了更多的灵活性，可以实现负载均衡、安全防护、数据过滤等功能；")]),v._v(" "),t("p",[v._v("代理服务器需要使用字段“Via”标记自己的身份，多个代理会形成一个列表")]),v._v(" "),t("p",[v._v("如果想要知道客户端的真实 IP 地址，可以使用字段“X-Forwarded-For”和“X-Real-IP”；")]),v._v(" "),t("p",[v._v("专门的“代理协议”可以在不改动原始报文的情况下传递客户端的真实 IP。\n“代理协议”有 v1 和 v2 两个版本，v1 和 HTTP 差不多，也是明文，而 v2 是二进制格式.\nv1，它在 HTTP 报文前增加了一行 ASCII 码文本，相当于又多了一个头。这一行文本其实非常简单，开头必须是“PROXY”五个大写字母，然后是“TCP4”或者“TCP6”，表示客户端的 IP 地址类型，再后面是请求方地址、应答方地址、请求方端口号、应答方端口号，最后用一个回车换行（\\r\\n）结束。")]),v._v(" "),t("h2",{attrs:{id:"缓存代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存代理"}},[v._v("#")]),v._v(" 缓存代理")]),v._v(" "),t("p",[v._v("缓存代理是增加了缓存功能的代理服务，缓存源服务器的数据，分发给下游的客户端；")]),v._v(" "),t("h3",{attrs:{id:"服务器端的缓存控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器端的缓存控制"}},[v._v("#")]),v._v(" 服务器端的缓存控制")]),v._v(" "),t("p",[v._v("![[服务器端缓存控制.png]]\n区分客户端上的缓存和代理上的缓存，可以使用两个新属性“"),t("strong",[v._v("private")]),v._v("”和“"),t("strong",[v._v("public")]),v._v("”")]),v._v(" "),t("ol",[t("li",[v._v("“private”表示缓存只能在客户端保存，是用户“私有”的")]),v._v(" "),t("li",[v._v("“public”的意思就是缓存完全开放，谁都可以存，谁都可以用")])]),v._v(" "),t("p",[v._v("缓存失效后的重新验证也要区分开（即使用条件请求“Last-modified”和“ETag”），")]),v._v(" "),t("ol",[t("li",[v._v("“"),t("strong",[v._v("must-revalidate")]),v._v("”是只要过期就必须回源服务器验证，")]),v._v(" "),t("li",[v._v("“"),t("strong",[v._v("proxy-revalidate")]),v._v("”只要求代理的缓存过期后必须验证，客户端不必回源，只验证到代理这个环节就行了。")])]),v._v(" "),t("p",[v._v("代理上缓存的生存时间可以使用新的“"),t("strong",[v._v("s-maxage")]),v._v("”（s 是 share 的意思，注意 maxage 中间没有“-”），只限定在代理上能够存多久，而客户端仍然使用“max_age”。")]),v._v(" "),t("p",[v._v("代理专用的属性“"),t("strong",[v._v("no-transform")]),v._v("”。代理有时候会对缓存下来的数据做一些优化，比如把图片生成 png、webp 等几种格式，方便今后的请求处理，而“no-transform”就会禁止这样做，不许“偷偷摸摸搞小动作”。")]),v._v(" "),t("h3",{attrs:{id:"客户端的缓存控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端的缓存控制"}},[v._v("#")]),v._v(" 客户端的缓存控制")]),v._v(" "),t("p",[v._v("![[客户端缓存控制.png]]\n存的生存时间，多了两个新属性“"),t("strong",[v._v("max-stale")]),v._v("”和“"),t("strong",[v._v("min-fresh")]),v._v("”。")]),v._v(" "),t("ol",[t("li",[v._v("max-stale”的意思是如果代理上的缓存过期了也可以接受，但不能过期太多，超过 x 秒也会不要。")]),v._v(" "),t("li",[v._v("“min-fresh”的意思是缓存必须有效，而且必须在 x 秒后依然有效。")])]),v._v(" "),t("h3",{attrs:{id:"相关问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关问题"}},[v._v("#")]),v._v(" 相关问题")]),v._v(" "),t("p",[t("strong",[v._v("Vary")]),v._v("  版本标记\n同一个请求，经过内容协商后可能会有不同的字符集、编码、浏览器等版本。比如，“Vary: Accept-Encoding”“Vary: User-Agent”，缓存代理必须要存储这些不同的版本。")]),v._v(" "),t("p",[t("strong",[v._v("Purge")]),v._v("-缓存清理")]),v._v(" "),t("ul",[t("li",[v._v("过期的数据应该及时淘汰，避免占用空间；")]),v._v(" "),t("li",[v._v("源站的资源有更新，需要删除旧版本，主动换成最新版（即刷新）；")]),v._v(" "),t("li",[v._v("有时候会缓存了一些本不该存储的信息，例如网络谣言或者危险链接，必须尽快把它们删除。\n比较常用的一种做法是使用自定义请求方法“PURGE”，发给代理服务器，要求删除 URI 对应的缓存数据。")])]),v._v(" "),t("h1",{attrs:{id:"安全篇"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安全篇"}},[v._v("#")]),v._v(" 安全篇")]),v._v(" "),t("p",[v._v("Http协议是明文传输的,传输必然是不安全的.基于更安全的需求,推出了Https协议.此协议与Http协议最大的不同是底层协议由 TCP/IP 替换为 SSL/TLS\n"),t("code",[v._v("HTTPS")]),v._v(" 协议要有如下特征:机密性,完整性、身份认证")]),v._v(" "),t("h2",{attrs:{id:"tls-协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tls-协议"}},[v._v("#")]),v._v(" TLS 协议")]),v._v(" "),t("p",[v._v("SSL/TLS 是信息安全领域中的权威标准，采用多种先进的加密技术保证通信安全")]),v._v(" "),t("p",[v._v("浏览器和服务器在使用 TLS 建立连接时需要选择一组恰当的加密算法来实现安全通信，这些算法的组合被称为“密码套件”（cipher suite，也叫加密套件）。")]),v._v(" "),t("p",[v._v("TLS 的密码套件命名非常规范，格式很固定。基本的形式是“密钥交换算法 + 签名算法 + 对称加密算法 + 摘要算法")]),v._v(" "),t("h2",{attrs:{id:"加密-机密性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加密-机密性"}},[v._v("#")]),v._v(" 加密-机密性")]),v._v(" "),t("p",[v._v("加密指的是对  "),t("code",[v._v("内容")]),v._v("  通过 "),t("code",[v._v("秘钥")]),v._v("  加密为 "),t("code",[v._v("密文")]),v._v("   ,接收方 收到后用 "),t("code",[v._v("秘钥")]),v._v(" 解密为内容")]),v._v(" "),t("p",[v._v("加密方式根据不同可以分为:")]),v._v(" "),t("ol",[t("li",[v._v("对称加密 :  AES 和 ChaCha20")]),v._v(" "),t("li",[v._v("非对称加密:  RSA , ECC , 性能影响较大")]),v._v(" "),t("li",[v._v("混合加密: 先通非对称加密交换 "),t("code",[v._v("对称加密的秘钥")]),v._v(" ,后续请求用此秘钥 进行对称加密请求")])]),v._v(" "),t("h2",{attrs:{id:"数字签名与证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数字签名与证书"}},[v._v("#")]),v._v(" 数字签名与证书")]),v._v(" "),t("ol",[t("li",[v._v("摘要算法用来实现完整性，能够为数据生成独一无二的“指纹”，常用的算法是 SHA-2；")]),v._v(" "),t("li",[v._v("数字签名是私钥对摘要的加密，可以由公钥解密后验证，实现身份认证和不可否认；")]),v._v(" "),t("li",[v._v("公钥的分发需要使用数字证书，必须由 CA 的信任链来验证，否则就是不可信的；")]),v._v(" "),t("li",[v._v("作为信任链的源头 CA 有时也会不可信，解决办法有 CRL、OCSP，还有终止信任。")])]),v._v(" "),t("h2",{attrs:{id:"https-协议慢怎么优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https-协议慢怎么优化"}},[v._v("#")]),v._v(" Https 协议慢怎么优化")]),v._v(" "),t("ol",[t("li",[v._v("可以有多种硬件和软件手段减少网络耗时和计算耗时，让 HTTPS 变得和 HTTP 一样快，最可行的是软件优化；")]),v._v(" "),t("li",[v._v("应当尽量使用 ECDHE 椭圆曲线密码套件，节约带宽和计算量，还能实现“False Start”；")]),v._v(" "),t("li",[v._v("服务器端应当开启“OCSP Stapling”功能，避免客户端访问 CA 去验证证书；")]),v._v(" "),t("li",[v._v("会话复用的效果类似 Cache，前提是客户端必须之前成功建立连接，后面就可以用“Session ID”“Session Ticket”等凭据跳过密钥交换、证书验证等步骤，直接开始加密通信。")])]),v._v(" "),t("h2",{attrs:{id:"http协议迁移"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http协议迁移"}},[v._v("#")]),v._v(" Http协议迁移")]),v._v(" "),t("h3",{attrs:{id:"nginx-配置ssl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置ssl"}},[v._v("#")]),v._v(" Nginx 配置SSL")]),v._v(" "),t("p",[v._v("在“listen”指令后面加上参数“ssl”，再配上证书文件就可以实现最基本的 HTTPS。")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("listen 443 ssl;\n\nssl_certificate xxx_rsa.crt; #rsa2048 cert\n\nssl_certificate_key xxx_rsa.key; #rsa2048 private key\n\nssl_certificate xxx_ecc.crt; #ecdsa cert\n\nssl_certificate_key xxx_ecc.key; #ecdsa private ke\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br"),t("span",{staticClass:"line-number"},[v._v("8")]),t("br"),t("span",{staticClass:"line-number"},[v._v("9")]),t("br")])]),t("p",[v._v("为了提高 HTTPS 的安全系数和性能，你还可以强制 Nginx 只支持 TLS1.2 以上的协议，打开“Session Ticket”会话复用：")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("ssl_protocols TLSv1.2 TLSv1.3;\n\nssl_session_timeout 5m;\n\nssl_session_tickets on;\n\nssl_session_ticket_key ticket.key;\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br"),t("span",{staticClass:"line-number"},[v._v("4")]),t("br"),t("span",{staticClass:"line-number"},[v._v("5")]),t("br"),t("span",{staticClass:"line-number"},[v._v("6")]),t("br"),t("span",{staticClass:"line-number"},[v._v("7")]),t("br")])]),t("p",[v._v("密码套件的选择方面，我给你的建议是以服务器的套件优先。这样可以避免恶意客户端故意选择较弱的套件、降低安全等级，然后密码套件向 TLS1.3“看齐”，只使用 ECDHE、AES 和 ChaCha20，支持“False Start”")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("ssl_prefer_server_ciphers on;\n\nssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE+AES128:!MD5:!SHA1;\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br")])]),t("p",[v._v("如果你的服务器上使用了 OpenSSL 的分支 BorringSSL，那么还可以使用一个特殊的“等价密码组”（Equal preference cipher groups）特性，它可以让服务器配置一组“等价”的密码套件，在这些套件里允许客户端优先选择，比如这么配置：")]),v._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[v._v("ssl_ciphers\n\n[ECDHE-ECDSA-AES128-GCM-SHA256|ECDHE-ECDSA-CHACHA20-POLY1305];\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br"),t("span",{staticClass:"line-number"},[v._v("2")]),t("br"),t("span",{staticClass:"line-number"},[v._v("3")]),t("br")])]),t("ol",[t("li",[v._v("从 HTTP 迁移到 HTTPS 是“大势所趋”，能做就应该尽早做；")]),v._v(" "),t("li",[v._v("升级 HTTPS 首先要申请数字证书，可以选择免费好用的“Let’s Encrypt”；")]),v._v(" "),t("li",[v._v("配置 HTTPS 时需要注意选择恰当的 TLS 版本和密码套件，强化安全；")]),v._v(" "),t("li",[v._v("原有的 HTTP 站点可以保留作为过渡，使用 301 重定向到 HTTPS。")])])])}),[],!1,null,null,null);t.default=s.exports}}]);