(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{343:function(t,r,i){"use strict";i.r(r);var n=i(3),e=Object(n.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[r("a",{attrs:{name:"mljPk"}})]),t._v(" "),r("h2",{attrs:{id:"string-stringbuilder-stringbuffer的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#string-stringbuilder-stringbuffer的区别"}},[t._v("#")]),t._v(" String StringBuilder  StringBuffer的区别")]),t._v(" "),r("p",[t._v("String 是实现了Final 的值,为常量,所以是线程安全的\nStringBuilder 与 StringBuffer 都是实现 AbstractStringBuilder 父类的子类,\tStringBuffer对方法加了同步锁,所以是线程安全的,StringBuilder 是线程不安全的,\n对于三者使⽤的总结：")]),t._v(" "),r("ol",[r("li",[t._v("操作少量的数据: 适⽤ String")]),t._v(" "),r("li",[t._v("单线程操作字符串缓冲区下操作⼤量数据: 适⽤ StringBuilder")]),t._v(" "),r("li",[t._v("多线程操作字符串缓冲区下操作⼤量数据: 适⽤ StringBuffe "),r("a",{attrs:{name:"uBgFl"}})])]),t._v(" "),r("h2",{attrs:{id:"自动装箱与拆箱-装箱"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自动装箱与拆箱-装箱"}},[t._v("#")]),t._v(" ⾃动装箱与拆箱 装箱")]),t._v(" "),r("p",[t._v("将基本类型⽤它们对应的引⽤类型包装起来；\n 拆箱：将包装类型转换为基本数据类型；")])])}),[],!1,null,null,null);r.default=e.exports}}]);